(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{379:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"set-集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[t._v("#")]),t._v(" Set 集合")]),t._v(" "),s("h2",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),s("p",[t._v("构造函数接收一个可迭代对象，生成迭代后去重的集合，对于引用类型会根据引用判断相等来去重。留空或传入 null 创建空集合，传入非可迭代对象保存。")]),t._v(" "),s("div",{staticClass:"code-block inside-gutter"},[t._v('// new Set([iterable]);\nconst s = new Set("abcabc");\n')]),s("h2",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("h3",{attrs:{id:"size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" size")]),t._v(" "),s("p",[t._v("返回集合元素数量")]),t._v(" "),s("h2",{attrs:{id:"操作相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作相关方法"}},[t._v("#")]),t._v(" 操作相关方法")]),t._v(" "),s("h3",{attrs:{id:"add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" add")]),t._v(" "),s("p",[t._v("添加指定值的元素")]),t._v(" "),s("h3",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" delete")]),t._v(" "),s("p",[t._v("删除指定元素")]),t._v(" "),s("h3",{attrs:{id:"clear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[t._v("#")]),t._v(" clear")]),t._v(" "),s("p",[t._v("清空集合中所有元素")]),t._v(" "),s("h3",{attrs:{id:"has"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has"}},[t._v("#")]),t._v(" has")]),t._v(" "),s("p",[t._v("判断指定值是否在集合中")]),t._v(" "),s("h2",{attrs:{id:"迭代相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代相关方法"}},[t._v("#")]),t._v(" 迭代相关方法")]),t._v(" "),s("h3",{attrs:{id:"keys-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keys-values"}},[t._v("#")]),t._v(" keys, values")]),t._v(" "),s("p",[t._v("在集合中，keys 是 values 的别名，返回集合中每个元素的迭代器对象。")]),t._v(" "),s("div",{staticClass:"code-block inside-gutter"},[t._v('const s = new Set("abc");\nconsole.log(s.keys === s.values);\nconst iterator = s.values();\nwhile ((x = iterator.next().value)) {\n  console.log(x);\n}\n')]),s("h2",{attrs:{id:"entries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entries"}},[t._v("#")]),t._v(" entries")]),t._v(" "),s("h2",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),s("p",[t._v("和数组类似，只是原本的下标位置同样是元素本身")]),t._v(" "),s("div",{staticClass:"code-block inside-gutter"},[t._v('const s = new Set("abc");\ns.forEach(console.log);\n')])])}),[],!1,null,null,null);a.default=r.exports}}]);